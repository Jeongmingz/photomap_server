# Generated by Django 5.2 on 2025-04-16 06:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('email_verified', models.DateTimeField(blank=True, null=True)),
                ('image', models.URLField(blank=True, max_length=500, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.CharField(editable=False, max_length=25, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=255)),
                ('provider', models.CharField(max_length=255)),
                ('provider_account_id', models.CharField(db_column='providerAccountId', max_length=255)),
                ('refresh_token', models.TextField(blank=True, null=True)),
                ('refresh_token_expires_in', models.IntegerField(blank=True, null=True)),
                ('access_token', models.TextField(blank=True, null=True)),
                ('expires_at', models.IntegerField(blank=True, null=True)),
                ('token_type', models.CharField(blank=True, max_length=255, null=True)),
                ('scope', models.CharField(blank=True, max_length=255, null=True)),
                ('id_token', models.TextField(blank=True, null=True)),
                ('session_state', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Account',
                'constraints': [models.UniqueConstraint(fields=('provider', 'provider_account_id'), name='unique_provider_account')],
            },
        ),
    ]
